# -*- coding: utf-8 -*-
"""Detecção Automática de Fake News com Regressão Logística

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/167Gu5NHrlpo6czr7WvCkOeNAtJvzdccg
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.model_selection import train_test_split
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import accuracy_score, confusion_matrix, classification_report

from google.colab import files

uploaded = files.upload()

fake_news = pd.read_csv('Fake.csv')
real_news = pd.read_csv('True.csv')

fake_news['label'] = 0  # Fake
real_news['label'] = 1  # Real

news_data = pd.concat([fake_news, real_news], ignore_index=True)

print(news_data['label'].value_counts())

news_data = news_data.drop(columns=['date', 'title'], axis=1, errors='ignore')

news_data = news_data.sample(frac=1).reset_index(drop=True)

X = news_data['text']
y = news_data['label']

tfidf_vectorizer = TfidfVectorizer(stop_words='english', max_df=0.7)

X_tfidf = tfidf_vectorizer.fit_transform(X)

X_train, X_test, y_train, y_test = train_test_split(X_tfidf, y, test_size=0.2, random_state=42)

model = LogisticRegression()

model.fit(X_train, y_train)

y_pred = model.predict(X_test)

accuracy = accuracy_score(y_test, y_pred)
print(f'Acurácia: {accuracy * 100:.2f}%')

conf_matrix = confusion_matrix(y_test, y_pred)
sns.heatmap(conf_matrix, annot=True, fmt='d', cmap='Blues', xticklabels=['Fake', 'Real'], yticklabels=['Fake', 'Real'])
plt.xlabel('Predição')
plt.ylabel('Verdadeiro')
plt.title('Matriz de Confusão')
plt.show()

print(classification_report(y_test, y_pred, target_names=['Fake', 'Real']))